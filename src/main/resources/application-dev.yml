spring:
  # spring.jpa.hibernate.ddl-auto can be none, update, create, create-drop
  # none: This is the default for MySQL, no change to the database structure.
  # update: Hibernate changes the database according to the given Entity structures.
  # create: Creates the database every time, but don't drop it when close.
  # create-drop: Creates the database then drops it when the SessionFactory closes.
  jpa:
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: false #不设置这个jpa保存会报错
    #show-sql: true
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.61.16.29:8500/qa?useSSL=false&autoReconnect=true
    username: qam
    password: qam123
  #redis配置
  redis: 
    host: 127.0.0.1
    port: 32768
    # REDIS (RedisProperties)
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 5000
    jedis: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
server:
  port: 8080
  servlet:
    context-path: /qa
#log
logging: 
  #日志文件的位置，会在该位置下自动生成spring.log，不能与logging.file共用，共用时logging.file起作用
  #默认情况下，日志文件的大小达到10MB时会切分一次，产生新的日志文件，默认级别为：ERROR、WARN、INFO
  #path: /Users/huangyue/work_software/apps/logs
  file: /Users/huangyue/work_software/apps/logs/qa.log
  #日志配置文件的名字，配置文件要放在resources文件夹下
  #日志配置文件有默认名，如果用默认名就会被自动扫描到，就不需要配置这个属性
  #config: classpath:logging-config.xml
  level:
    org:
      hibernate:
        SQL: DEBUG
#各服务的token
TOKEN: 
  CLIENT: zdRcLtPlnBTs55KWg9KJqbBHKadYlY
  AUTHORIZATION: xNqrNsx75BVhFEoRZVF8CkY33TMxOa
  CORE: 8hXa5JjiJtpq6ICoIOhXqqsAHu3bgH
#各服务的地址
SERVICES: 
  #CORE: http://10.61.16.29:8521/qac/api
  #AUTHORIZATION: http://10.61.16.29:8520/qaa/api
  CORE: http://localhost:8081/qac/api
  AUTHORIZATION: http://localhost:8082/qaa/api
  
  